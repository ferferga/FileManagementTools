name: Generate Artifacts üõ†Ô∏è

on:
  push:

jobs:
  build:
    name: Build üõ†Ô∏è
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        arch: 
          - x64
        tool:
          - 'folder_structure_copy'
          - 'difference_checker'
        # exclude:
        #   - os: windows-latest
        #     arch: armhf

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v1

      - name: Install Python üêç
        uses: actions/setup-python@v1
        with:
          architecture: ${{ matrix.arch}}

      - name: Install requirements ‚öôÔ∏è
        working-directory: ./${{ matrix.tool }}
        run: |
          pip install -r requirements.txt
          pip install PyInstaller

      - name: Run PyInstaller üë∑
        working-directory: ./${{ matrix.tool }}
        run: |
          python -m PyInstaller ${{ matrix.tool }}.py --onefile

      - name: Sanitize OS names üßπ
        id: os
        run: |
          OS="${'${{ matrix.os }}'/'-latest'/''}"
          echo $OS
          echo "::set-output name=name::$OS"

      - name: Build for UNIX systems 
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          name: ${{ matrix.tool }}-${{ steps.os.name }}_${{ matrix.arch }}
          path: ./${{ matrix.tool }}/dist/${{ matrix.tool }}

      - name: Build for Windows ü™ü
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: ${{ matrix.tool }}-${{ steps.os.name }}_${{ matrix.arch }}
          path: ./${{ matrix.tool }}/dist/${{ matrix.tool }}.exe
